name: publish

on:
  push:
    tags:
      - '*'

jobs:
  publish-npm:
    name: Publish to npm registry
    runs-on: ubuntu-latest
    environment: ${{ vars.ENV_STAGE }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          registry-url: ${{ vars.NPM_REGISTRY }}
          node-version: current
          cache: yarn
      - run: yarn install --frozen-lockfile
      - name: Publish with prod config
        run: yarn ci:publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Create a new release
        run: yarn ci:release
        env:
          TAG: ${{ github.ref_name }}
          GITHUBTOKEN: ${{ secrets.GIT_TOKEN }}

  publish-docker:
    needs: publish-npm
    name: Publish to docker hub
    runs-on: ubuntu-latest
    environment: ${{ vars.ENV_STAGE }}
    env:
      IMAGE_NAME: ${{ GITHUB.repository }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      - name: Log into registry ${{ vars.REGISTRY }}
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ vars.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ vars.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Publish to docker hub - node
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          platforms: ${{ vars.PLATFORMS }}
          push: true
          build-args: |
            VERSION=${{ vars.VERSION || github.ref_name }}
            NODE_VERSION=${{ vars.NODE_VERSION }}
          tags: ${{ vars.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ vars.VERSION || github.ref_name }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Publish to docker hub - alpine
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile.alpine
          platforms: ${{ vars.PLATFORMS }}
          push: true
          build-args: |
            VERSION=${{ vars.VERSION || github.ref_name }}
            NODE_VERSION=${{ vars.NODE_VERSION }}
            ALPINE_VERSION=${{ vars.ALPINE_VERSION }}
          tags: ${{ vars.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ vars.VERSION || github.ref_name }}-alpine, ${{ vars.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
