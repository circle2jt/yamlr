name: publish

on:
  create:
    branches:
      - main
    ref_type: tag

jobs:
  publish-npm:
    name: Build & publish to npm registry ${{ github.ref_name }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: latest
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          registry-url: https://registry.npmjs.org
          node-version: current
          cache: pnpm
      - run: pnpm install --frozen-lockfile --prefer-offline --silent --reporter silent
      - run: pnpm publish:npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-docker:
    needs: publish-npm
    name: Build & publish to docker hub
    runs-on: ubuntu-latest
    environment: production
    env:
      IMAGE_NAME: ${{ github.repository }}
      REGISTRY: ${{ vars.REGISTRY }}
      PLATFORMS: ${{ vars.PLATFORMS }}
      NODE_VERSION: ${{ vars.NODE_VERSION }}
      ALPINE_VERSION: ${{ vars.ALPINE_VERSION }}
      VERSION: ${{ vars.VERSION }}
    steps:
      - name: "Set version to tag"
        env:
          DEFAULT_VERSION: ${{ github.ref_name }}
        run: |
          if [ -z "$VERSION" ]; then
            echo "VERSION=$DEFAULT_VERSION" >> $GITHUB_ENV
          fi

      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Publish to docker hub - node
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          platforms: ${{ env.PLATFORMS }}
          push: true
          build-args: |
            VERSION=${{ env.VERSION }}
            NODE_VERSION=${{ env.NODE_VERSION }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Publish to docker hub - alpine
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile.alpine
          platforms: ${{ env.PLATFORMS }}
          push: true
          build-args: |
            VERSION=${{ env.VERSION }}
            NODE_VERSION=${{ env.NODE_VERSION }}
            ALPINE_VERSION=${{ env.ALPINE_VERSION }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}-alpine, ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
