title: Create a new tag on github
vars:
  token: ""
  owner: ""
  repo: ""
  tag: "%s"
  lastCommitSHA: ""
  packageJson: ""
  validTagRegex: ""
runs:
  - ->: git-http
    force: true
    template:
      baseURL: https://api.github.com
      headers:
        Accept: application/vnd.github+json"
        Authorization: Bearer ${$vars.token}

  - exec'js: |
      const version = require(this.scene.getPath($vars.packageJson)).version
      $vars.tag = !$vars.tag ? version : $vars.tag.replace('%s', version)

  - if: ${ !$vars.validTagRegex || new RegExp($vars.validTagRegex).test($vars.tag) }
    runs:
      - <-: git-http
        http'get:
          url: /repos/${$vars.owner}/${$vars.repo}/commits/${$vars.lastCommitSHA}
        vars:
          lastCommitter: ${this.$.response.data.commit.committer}
          lastCommitDes: ${this.$.response.data.commit.message?.replace(/^[^\n]+/, $vars.tag)}

      - echo: |
          tag: ${$vars.tag}
          message: ${$vars.lastCommitDes}
          object: ${$vars.lastCommitSHA}
          type: 'commit'
          tagger: ${JSON.stringify($vars.lastCommitter || {})}
          ref: refs/tags/${$vars.tag}

      - name: Create a new tag
        runs:
          - <-: git-http
            http'post:
              url: /repos/${$vars.owner}/${$vars.repo}/git/tags
              body:
                tag: ${$vars.tag}
                message: ${$vars.lastCommitDes}
                object: ${$vars.lastCommitSHA}
                type: commit
                tagger: ${$vars.lastCommitter}
            vars:
              sha: ${this.$.response.data.sha}
          - <-: git-http
            http'post:
              url: /repos/${$vars.owner}/${$vars.repo}/git/refs
              body:
                ref: refs/tags/${$vars.tag}
                sha: ${$vars.sha}
      - echo: Done
